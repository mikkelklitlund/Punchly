services:
  postgres:
    image: postgres:16-alpine
    env_file:
      - ./env/postgres.env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}']
      interval: 5s
      timeout: 3s
      retries: 15
    restart: unless-stopped
    # In prod, keep DB private:
    # ports: ["6500:5432"]

  migrate:
    image: ghcr.io/mikkelklitlund/punchly-backend:${TAG:-main}
    pull_policy: always
    env_file:
      - ./env/backend.env
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ['npx', 'prisma', 'migrate', 'deploy']
    restart: 'no'

  backend:
    image: ghcr.io/mikkelklitlund/punchly-backend:${TAG:-main}
    pull_policy: always
    env_file:
      - ./env/backend.env
    depends_on:
      migrate:
        condition: service_completed_successfully
    ports:
      - '4000:4000'
    volumes:
      - ./data/uploads:/app/backend/uploads
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://localhost:4000/health || exit 1']
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  frontend:
    image: ghcr.io/mikkelklitlund/punchly-frontend:${TAG:-main}
    pull_policy: always
    depends_on:
      backend:
        condition: service_started
    ports:
      - '3000:80'
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://localhost/ || exit 1']
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped
