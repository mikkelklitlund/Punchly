services:
  postgres:
    image: postgres:16-alpine
    env_file:
      - ./env/postgres.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '6500:5432'
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-punchly}'
        ]
      interval: 5s
      timeout: 3s
      retries: 15
    restart: unless-stopped

  backend:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    env_file:
      - ../backend/.env.docker
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '4000:4000'
    volumes:
      - ../backend/uploads:/app/backend/uploads
    restart: unless-stopped

  frontend:
    build:
      context: ..
      dockerfile: frontend/Dockerfile
    env_file:
      - ../frontend/.env
    depends_on:
      backend:
        condition: service_started
    ports:
      - '3000:80'
    restart: unless-stopped

volumes:
  postgres_data:
